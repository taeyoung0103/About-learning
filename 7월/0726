인덱싱과 슬라이싱을 이용한 배열의 원소 조회
배열 인덱싱(Indexing)
-> index
    배열내의 원소의 식별번호
    0부터 시작
-> indexing
    index를 이용해 원소 조회
    [] 표기법 사용

-> 구문
    ndarray[index]
    양수는 지정한 index의 값을 조회한다.
    음수는 뒤부터 조회한다.
        마지막 index가 -1
    2차원배열의 경우
        arr[행index, 열index]
        파이썬 리스트와 차이점 (list[행][열])
    N차원 배열의 경우
        arr[0축 index, 1축 index, ..., n축 index]

-> 팬시(fancy) 인덱싱
    여러개의 원소를 한번에 조회할 경우 리스트에 담아 전달한다.
    다차원 배열의 경우 각 축별로 list로 지정
    arr[[1,2,3,4,5]]
        1차원 배열(vector): 1,2,3,4,5 번 index의 원소들 한번에 조회
    arr[[0,3],[ 1,4]]
        [0,3] - 1번축 index list, [1,4] - 2번축 index list
        2차원 배열(matrix): [0,1], [3,4] 의 원소들 조회
        
        
# fancy indexing = 한번에 여러개값을 조회
# 2,5,7 
# a[2,5,7] #0축:2, 1축:5, 2축: 7
a[[2,5,7]] #리스트로 조회할 index들을 묶어준다.


a2 = np.arange(12).reshape(2,2,3)
a2.shape
a2
-> array([[[ 0,  1,  2],
        [ 3,  4,  5]],

       [[ 6,  7,  8],
        [ 9, 10, 11]]])
        

--------------------------------------------------------------

슬라이싱
  배열의 부분 집합을 하위배열로 조회 및 변경하는 방식
  ndarry[start : stop : step ]
      start : 시작 인덱스. 기본값 0
      stop : 끝 index. stop은 포함하지 않는다. 기본값 마지막 index
      step : 증감 간격. 기본값 1





















