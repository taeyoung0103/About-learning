
배열의 형태(shape) 변경
reshape()을 이용한 차원 변경
  numpy.reshape(a, newshape) 또는 ndarray.reshape(newshape)
    a: 형태를 변경할 배열
    newshape : 변경할 형태 설정.
      원소의 개수를 유지하는 shape으로만 변환 가능하다
      
      
import numpy as np

x = np.arange(20)
x.shape

r1 = np.reshape(x, (4,5))
r1 = np.reshape(x, (5,4))
r1.shape
-> (5, 4)

r2 = np.reshape(x, (2,2,5))
r2 = np.reshape(x, (2,5,2))
print(r2.shape)
r2
-> (2, 5, 2)
-> array([[[ 0,  1],
        [ 2,  3],
        [ 4,  5],
        [ 6,  7],
        [ 8,  9]],

       [[10, 11],
        [12, 13],
        [14, 15],
        [16, 17],
        [18, 19]]])


x.reshape(4,-1)
x.reshape(2,2,-1)    # -1 = 알아서 맞춰주는 역할을 한다.
-> array([[[ 0,  1,  2,  3,  4],
        [ 5,  6,  7,  8,  9]],

       [[10, 11, 12, 13, 14],
        [15, 16, 17, 18, 19]]])

-------------------------------------------------

차원 늘리기(확장)
  dummy axis 를 추가
    dummy axis: size가 1인 axis(축)

numpy.newaxis 속성을 이용해 차원 늘리기
  size가 1인 rank를 늘릴때 사용한다.
    지정한 axis에 size 1인 축을 추가한다.
  slicing에 사용하거나 indexing에 ...과 같이 사용한다.
    slicing의 경우 원하는 위치의 축을 늘릴 수 있다.
    index에 ...과 사용하는 경우 첫번째나 마지막 축을 늘릴때 사용한다.

-----------------------------------------------------

indexing에 ... 과 같이 사용
  ndarray[..., np.newaxis]
  첫번째 축이나 마지막 축을 늘릴때만 사용가능
  
x = np.arange(12).reshape(3,4)
  x.shape  
-> (3, 4)

# (3,4) => (3,1,4)
r = x[:, np.newaxis ,:]
print(r.shape)
-> (3, 1, 4)
r
-> array([[[ 0,  1,  2,  3]],

       [[ 4,  5,  6,  7]],

       [[ 8,  9, 10, 11]]])

-----------------------------------------------

numpy.expand_dims (배열, axis)
  매개변수로 받은 배열에 지정한 axis의 rank를 확장한다.

x.shape
-> (3, 4)

# (3,4) => (1,3,4)
# x[np.newaxis, ...]
r = np.expand_dims(x, axis=0)
r.shape
-> (1, 3, 4)

# (3,4) => (3,1,4)
r = np.expand_dims(x, axis=[1,3])
r.shape
-> (3, 1, 4, 1)

---------------------------------------------------

차원 줄이기(축소)
  numpy.squeeze(배열, axis=None), 배열객체.squeeze(axis=None)
    배열에서 지정한 축(axis)을 제거하여 차원(rank)를 줄인다.
    제거하려는 축의 size는 1이어야 한다.
    축을 지정하지 않으면 size가 1인 모든 축을 제거한다.
        (3,1,1,2) => (3,2)

x = np.arange(12).reshape(3,1,4,1,1)
x.shape
-> (3, 1, 4, 1, 1)

r = x.squeeze() #axis를 생략->None->모든 dummy axis를 제거
r.shape
-> (3, 4)

r = x.squeeze(axis=(1,3)) #여러 축을 지정해서 제거->튜플로 묶어서 준다.
r.shape
-> (3, 4, 1)

np.squeeze(x, (1,3))
-> array([[[ 0],
        [ 1],
        [ 2],
        [ 3]],

       [[ 4],
        [ 5],
        [ 6],
        [ 7]],

       [[ 8],
        [ 9],
        [10],
        [11]]])
 
 
x.squeeze(axis=0) #size가 1인 axis(축) 만 제거할 수 있다.
-> 에러가 난다.

----------------------------------------

배열객체.flatten()
  다차원 배열을 1차원으로 만든다.

print(x.shape)
-> (3, 1, 4, 1, 1)

r = x.flatten()
r.shape
-> (12,)





























