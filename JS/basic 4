 함수      함수명  매개변수
function sayHello(name){
  console.log(`Hello, ${name}`);
}

sayHello('Mike');
=> Hello Mike가 출력된다.

-------------------------------------------------

// 함수 작성

function showError(){
  alert('// 함수 작성

function showError(){
  alert('에러가 발생했습니다. 다시 시도해주세요.');
}
showError();

자동으로 '에러가 발생했습니다. 다시 시도해주세요.' 가 출력된다.


---------------------------------------------------

// 함수 작성
// 매개변수가 있는 함수

function sayHello(name){
  const msg = `Hello, ${name}`;
  console.log(msg);
}

sayHello('Mike');
=> Hello, Mike 가 출력된다. const msg로 지정했기 때문이다.
마찬가지로
sayHello('John');
=> Hello, John 이 출력된다.


----------------------------------------------------

이름을 안넣으면 Hello가, 넣으면 Hello 뒤에 이름도 같이 나오게 만들어보자

// 함수 작성
// 매개변수가 있는 함수

function sayHello(name){
  let msg = `Hello`; 
  if(name){
    msg += ', '+name;
  }
  console.log(msg);
}

아니면

function sayHello(name){
  let msg = `Hello`; 
  if(name){
    msg += ', ${name}';
  }
  console.log(msg);
}

이렇게 만들면

sayHello();
=> Hello만 출력
sayHello('Mike');
=> Hello, Mike 가 출력된다.


-----------------------------------------------

호출전에 설정한것을 변경하고, 변경된 것을 다시 호출해보자

let msg = 'Hello';
console.log('함수 호출 전')
console.log(msg)

function sayHello(name){ 
  if(name){
    msg += `, ${name}`;
  }
  console.log('함수 내부')
  console.log(msg);
}

sayHello('Mike');
console.log('함수 호출 후')
console.log(msg)

=> 처음 함수 msg는 Hello였으나 function함수를 거쳐서 msg가 Hello 뒤에 `, 이름` 을 추가로 가지도록 설정되었다.


-----------------------------------------------------

// 전역변수와 지역변수

leg msg = 'welcome';
console.log(msg)

function sayHello(name){
  let msg = "Hello"
  console.log(msg + ' ' + name);
}

sayHello('Mike')
console.log(msg)

=> 여기서 leg msg는 전역변수이고 function안에 들어있는 leg msg는 지역변수이다. function안에 들어있는것은 그 안에서만 쓰여서 밖의 전역변수에 영향을 주지않음을 알 수 있다.


-----------------------------------------

// default value 도 나오게 하는 방법

function sayHello(name){
  let newName = name || 'friend';
  let msg = `Hello, ${newName}`
  console.log(msg)
}

sayHello();
=> 아무것도 입력을 안하면 undefined가 되기 때문에 let newName에서 name은 false가 되고 뒤에 'friend는 true가 된다. 
||, 즉 or는 true를 반환하기 때문에 최종적으로  Hello, friend가 출력된다

sayHello('Jane');
=> 이와 같이 Jane을 입력하면 name값에 Jane이 들어가고, undefined가 아니기 떄문에 그대로 name값이 출력된다.
그래서  Hello, Jane 이 출력된다.

위 함수를 좀 더 간단하게 만들어보자면

function sayHello(name = 'friend){
  let msg = `Hello, ${newName}`
  console.log(msg)
}
이렇게 만들 수 있다.


-----------------------------------------------






