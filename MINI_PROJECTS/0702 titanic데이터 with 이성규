import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib as mpl
import seaborn as sns

%matplotlib inline

# 타이타닉 불러오기
titanics = sns.load_dataset("titanic")

# pclass를 x축으로 하는 그래프 생성
sns.countplot(data=titanics, x='pclass')

titanics['pclass'].value_counts()

# count값의 인덱스 추출
titanics['pclass'].value_counts().index

# 추출한 index값 tolist로
titanics['pclass'].value_counts().index.tolist()

# order_list로 재작성
order_list = titanics['pclass'].value_counts().index.tolist()

# 왼쪽부터 숫자가 큰 데이터가 차례로 나오는 그래프가 출력된다.
sns.countplot(data=titanics, x='pclass', order=order_list);


# 생존자들 관련 데이터 사용
# 위와 똑같이 왼쪽부터 내림차순을 사용
# 생존자 (=1) 만을 뽑아낸 데이터
ti_survived = titanics.loc[titanics['survived'] == 1]

# pclass를 x축으로 하는 그래프
# 그래프를 보면 값이 1, 3, 2순임을 알수있다. 
sns.countplot(data=ti_survived, x='pclass');

# index값을 뽑은다음 이를 order_list2로 재정의한다.
order_list2 = ti_survived['pclass'].value_counts().index.tolist()

# 출력하면 왼쪽부터 내림차순으로 그래프가 다시 나온다.
plt.figure(figsize=[5,10])
sns.countplot(data=ti_survived, x='pclass', order=order_list2);


# 생존자와 사망자 두 수치를 pclass별로 나눈 그래프
sns.countplot(data=titanics, x='pclass', order=order_list, hue='survived');

# 성별과 생존여부 2가지로 나눈 그래프
order_list3 = titanics['sex'].value_counts().index.tolist()


# 'survived', 'pclass', 'fare', 'parch', 'sibsp', 'age' 이것들이 서로에게 얼마나 영향을 미치는지 히트맵으로 분석
# 1에 가까울수록 양의 상관관계 = 어느 한가지의 수치가 높아지면 다른것도 높아진다.
# -1에 가까울수록 음의 상관관계 = 어느 한가지의 수치가 낮아져야 다른것이 높아진다.
heatmap_data = titanics[['survived', 'pclass', 'fare', 'parch', 'sibsp', 'age']]
colormap = plt.cm.RdBu
plt.figure(figsize=(14, 12))
plt.title('Pearson Correlation of Features', y=1.05, size=15)
sns.heatmap(heatmap_data.astype(float).corr(), linewidths=0.1, vmax=1.0, 
            square=True, cmap=colormap, linecolor='white', annot=True,annot_kws={"size":16})
del heatmap_data




